import React, { useEffect } from "react";
import "./1.css";
import traffyLogo from "./traffy.png";
import liff from "@line/liff";
import { auth, googleProvider, facebookProvider } from "./firebaseConfig";
import { signInWithPopup, FacebookAuthProvider } from "firebase/auth";

const DB_API = "https://1ed0db3ec62d.ngrok-free.app/users";

const Login = () => {
  useEffect(() => {
    const initLiff = async () => {
      try {
        await liff.init({ liffId: "2008265392-G9mE93Em" });
        console.log("LIFF initialized");
      } catch (error) {
        console.error("LIFF init error:", error);
      }
    };
    initLiff();
  }, []);

  // üîπ LINE Login
  const handleLineLogin = async () => {
    try {
      if (!liff.isLoggedIn()) {
        liff.login();
      } else {
        const profile = await liff.getProfile();

        // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• (LINE ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏¢‡∏Å ‡∏à‡∏∂‡∏á‡πÉ‡∏™‡πà‡∏£‡∏ß‡∏°‡πÑ‡∏ß‡πâ‡πÉ‡∏ô Name)
        const userData = {
          Email: profile.userId + "@line.me",
          First_Name: profile.displayName, // ‚úÖ ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡πá‡∏°
          Last_Name: "", // LINE ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•
          Provider: "line",
          Provider_ID: profile.userId,
        };

        console.log("‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô LINE ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", userData);

        await fetch(DB_API, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(userData),
        });

        alert(`‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö LINE ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ ${profile.displayName}`);
        liff.logout();
        window.location.reload();
      }
    } catch (error) {
      console.error("LINE login error:", error);
      alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢ LINE ‡πÑ‡∏î‡πâ");
    }
  };

  // üîπ Google Login
  const handleGoogleLogin = async () => {
    try {
      const result = await signInWithPopup(auth, googleProvider);
      const user = result.user;

      // ‚úÖ ‡πÅ‡∏¢‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• (Google ‡∏°‡∏±‡∏Å‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡πá‡∏°‡πÉ‡∏ô displayName)
      const [firstName, ...lastParts] = (user.displayName || "").split(" ");
      const lastName = lastParts.join(" ");

      const userData = {
        Email: user.email,
        First_Name: firstName || "",
        Last_Name: lastName || "",
        Provider: "google",
        Provider_ID: user.uid,
      };

      console.log("‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô Google ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", userData);

      await fetch(DB_API, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(userData),
      });

      alert(`‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö Google ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ ${user.displayName}`);
      window.location.reload();
    } catch (error) {
      if (error.code === "auth/popup-closed-by-user") {
        alert("‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö");
      } else {
        console.error("Google login error:", error);
        alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢ Google ‡πÑ‡∏î‡πâ");
      }
    }
  };

  // üîπ Facebook Login
  const handleFacebookLogin = async () => {
  try {
    const result = await signInWithPopup(auth, facebookProvider);
    const user = result.user;

    const [firstName, ...lastParts] = (user.displayName || "").split(" ");
    const lastName = lastParts.join(" ");

    const userData = {
      Email: user.email,
      First_Name: firstName || "",
      Last_Name: lastName || "",
      Provider: "facebook",
      Provider_ID: user.uid,
    };

    console.log("‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô Facebook ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", userData);

    await fetch(DB_API, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(userData),
    });

    alert(`‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö Facebook ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ ${user.displayName}`);
    window.location.reload();
  } catch (error) {
    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô provider ‡∏≠‡∏∑‡πà‡∏ô
    if (error.code === "auth/account-exists-with-different-credential") {
      const email = error.customData?.email;
      const pendingCred = FacebookAuthProvider.credentialFromError(error);

      // üîπ ‡∏î‡∏∂‡∏á provider ‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ
      const methods = await fetchSignInMethodsForEmail(auth, email);

      // ‡∏ñ‡πâ‡∏≤ provider ‡πÄ‡∏î‡∏¥‡∏°‡∏Ñ‡∏∑‡∏≠ google ‡πÉ‡∏´‡πâ login google ‡∏Å‡πà‡∏≠‡∏ô
      if (methods.includes("google.com")) {
        const googleResult = await signInWithPopup(auth, googleProvider);

        // üîó ‡∏ú‡∏π‡∏Å Facebook ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Google ‡πÄ‡∏î‡∏¥‡∏°
        await linkWithCredential(googleResult.user, pendingCred);

        alert("‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Facebook ‡∏Å‡∏±‡∏ö Google ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
        window.location.reload();
      } else {
        alert("‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏∑‡πà‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÄ‡∏î‡∏¥‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö");
      }
    } else if (error.code === "auth/popup-closed-by-user") {
      alert("‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö");
    } else {
      console.error("Facebook login error:", error);
      alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢ Facebook ‡πÑ‡∏î‡πâ");
    }
  }
};

  return (
    <div className="login-container">
      <div className="login-column">
        <img src={traffyLogo} alt="Traffy Logo" className="logo" />
        <h2>Fondue Dashboard and Manager</h2>
        <h3>‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏°‡∏∑‡∏≠‡∏á</h3>

        <p className="description">
          <span className="highlight">Traffy Fondue</span><br />
          ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
        </p>

        <button className="facebook-btn" onClick={handleFacebookLogin}>
          ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢ Facebook
        </button>

        <button className="google-btn" onClick={handleGoogleLogin}>
          ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢ Google
        </button>

        <button className="line-btn" onClick={handleLineLogin}>
          ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢ LINE
        </button>

        <p className="contact">‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà LINE: @fonduehelp</p>
      </div>
    </div>
  );
};

export default Login;
